{"version":3,"sources":["webpack:///./src/app/pages/constants.ts","webpack:///./src/app/pages/user/request-list/request-list.module.ts","webpack:///./src/app/pages/user/request-list/request-list.page.html","webpack:///./src/app/pages/user/request-list/request-list.page.scss","webpack:///./src/app/pages/user/request-list/request-list.page.ts","webpack:///./src/app/services/api/api.service.ts","webpack:///./src/app/services/toast/toast.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,UAAU,GAAG;IACtB,YAAY;IACZ,eAAe;IACf,qBAAqB;IACrB,YAAY;IACZ,uBAAuB;IACvB,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,aAAa;IACb,kBAAkB;IAClB,mBAAmB;IACnB,WAAW;IACX,oBAAoB;IACpB,oBAAoB;IACpB,sCAAsC;IACtC,cAAc;CACjB,CAAC;AAEF;;GAEG;AACI,IAAM,cAAc,GAAG;IAC1B,YAAY;IACZ,aAAa;IACb,QAAQ;IACR,OAAO;IACP,kBAAkB;CACrB,CAAC;AAEF;;GAEG;AACI,IAAM,WAAW,GAAG;IACvB,KAAK,EAAE,oBAAoB;IAC3B,MAAM,EAAE,YAAY;CACvB,CAAC;AAEF;;GAEG;AACI,IAAM,UAAU,GAAG,kCAAkC,CAAC;AAE7D;;GAEG;AACI,IAAM,YAAY,GAAG,wCAAwC,CAAC;AAErE;;GAEG;AACI,IAAM,MAAM,GAAG;IAClB,SAAS;IACT,aAAa;IACb,QAAQ;CACX,CAAC;AAEF;;GAEG;AACI,IAAM,qBAAqB,GAAG,+bAA+b,CAAC;AAEre;;;;;;GAMG;;;;;;;;;;;;;;;;;;;;;;;ACpEsC;AACM;AACF;AACU;AAEV;AAES;AAEtD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAe;KAC3B;CACF,CAAC;AAWF;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QATjC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,kEAAe,CAAC;SAChC,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBlC,whBAAwhB,eAAe,mHAAmH,2BAA2B,krBAAkrB,iBAAiB,qMAAqM,kBAAkB,uQ;;;;;;;;;;;ACA/kD,wCAAwC,uBAAuB,EAAE,8BAA8B,gBAAgB,8BAA8B,sBAAsB,EAAE,mBAAmB,iBAAiB,kCAAkC,EAAE,0BAA0B,8BAA8B,kBAAkB,EAAE,8BAA8B,cAAc,EAAE,gCAAgC,kBAAkB,sBAAsB,qBAAqB,EAAE,6CAA6C,kBAAkB,wBAAwB,8BAA8B,EAAE,yBAAyB,kBAAkB,EAAE,6BAA6B,mBAAmB,EAAE,8BAA8B,sBAAsB,EAAE,+CAA+C,2vD;;;;;;;;;;;;;;;;;;;;;ACA/sB;AACY;AACqB;AAC1C;AAC2B;AAOpE;IAKE,yBACU,UAAsB,EACtB,WAA8B,EAC9B,OAAwB,EACxB,YAA0B,EAC1B,OAAsB;QAJtB,eAAU,GAAV,UAAU,CAAY;QACtB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,YAAO,GAAP,OAAO,CAAiB;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,YAAO,GAAP,OAAO,CAAe;QARxB,kBAAa,GAAG,EAAE,CAAC;QACnB,cAAS,GAAG,iDAAM,CAAC;IAQvB,CAAC;IAEL,kCAAQ,GAAR;IACA,CAAC;IAED,0CAAgB,GAAhB;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED;;OAEG;IACH,kCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;;OAGG;IACG,qCAAW,GAAjB;;;;;;;wBACQ,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBACrB,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gCAC/C,OAAO,EAAE,YAAY;6BACtB,CAAC;;wBAFI,UAAU,GAAG,SAEjB;wBACF,qBAAM,UAAU,CAAC,OAAO,EAAE;;wBAA1B,SAA0B,CAAC;wBAC3B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC;6BAC5B,SAAS,CAAC,UAAC,GAAQ;4BAClB,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;4BACxB,IAAG,GAAG,CAAC,IAAI,EAAE;gCACX,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCACvC,IAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;wCAC3B,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;qCACtC;iCACF;6BACF;4BACD,UAAU,CAAC,OAAO,EAAE,CAAC;4BACrB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;wBAC5C,CAAC,EAAE,eAAK;4BACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;4BACnB,UAAU,CAAC,OAAO,EAAE,CAAC;wBACvB,CAAC,CAAC,CAAC;;;;;KACN;IAED;;OAEG;IACH,2CAAiB,GAAjB;QACE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,qBAAqB,CAAC,CAAC;IACtD,CAAC;IAED;;;;OAIG;IACG,6CAAmB,GAAzB,UAA0B,KAAK;;;;;;4BACZ,qBAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;4BACzC,MAAM,EAAE,gBAAgB;4BACxB,OAAO,EAAE;gCACP;oCACE,IAAI,EAAE,QAAQ;oCACd,IAAI,EAAE,QAAQ;oCACd,QAAQ,EAAE,WAAW;oCACrB,OAAO,EAAE;oCAET,CAAC;iCACF;gCACD;oCACE,IAAI,EAAE,IAAI;oCACV,OAAO,EAAE,UAAC,IAAI;wCACZ,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;oCACnD,CAAC;iCACF;6BACF;yBACF,CAAC;;wBAlBI,QAAQ,GAAG,SAkBf;wBACF,qBAAM,QAAQ,CAAC,OAAO,EAAE;;wBAAxB,SAAwB,CAAC;;;;;KAC1B;IAED;;;;OAIG;IACG,sCAAY,GAAlB,UAAmB,SAAS;;;;;;4BACN,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;4BAChD,OAAO,EAAE,gBAAgB;yBAC1B,CAAC;;wBAFI,WAAW,GAAG,SAElB;wBACF,qBAAM,WAAW,CAAC,OAAO,EAAE;;wBAA3B,SAA2B,CAAC;wBAC5B,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC;6BACpC,SAAS,CAAC;4BACT,WAAW,CAAC,OAAO,EAAE,CAAC;4BACtB,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;4BAClD,KAAI,CAAC,WAAW,EAAE,CAAC;wBACrB,CAAC,EAAE,eAAK;4BACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;4BACnB,WAAW,CAAC,OAAO,EAAE,CAAC;4BACtB,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;wBAC1D,CAAC,CAAC;;;;;KACL;IAED;;OAEG;IACH,4CAAkB,GAAlB;QACE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;IAC/C,CAAC;IAED;;OAEG;IACH,wCAAc,GAAd;QACE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IA5HU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,yHAAuC;;SAExC,CAAC;+EAOsB,2EAAU;YACT,gEAAiB;YACrB,8DAAe;YACV,iFAAY;YACjB,4DAAa;OAVrB,eAAe,CA6H3B;IAAD,sBAAC;CAAA;AA7H2B;;;;;;;;;;;;;;;;;;;;ACXe;AACoB;AACV;AAKrD;IAQE,oBACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAP1B;;;WAGG;QACK,WAAM,GAAG,kEAAU,CAAC;IAIxB,CAAC;IAEL;;;;OAIG;IACH,2BAAM,GAAN,UAAO,GAAG;QACR,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAgB,EAAE,GAAG,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACjF,CAAC;IAED;;;;OAIG;IACH,0BAAK,GAAL,UAAM,UAAU;QACd,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,aAAa,EAAE,UAAU,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACrF,CAAC;IAED;;;;OAIG;IACH,kCAAa,GAAb,UAAc,KAAK;QACjB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,oBAAoB,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAChG,CAAC;IAED;;;;OAIG;IACH,4BAAO,GAAP,UAAQ,GAAG;QACT,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,eAAe,EAAE,EAAC,GAAG,EAAE,GAAG,EAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACvF,CAAC;IAED;;;;OAIG;IACH,+BAAU,GAAV,UAAW,IAAI;QACb,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,kBAAkB,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAC5F,CAAC;IAED,gCAAW,GAAX;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,kBAAkB,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAC9E,CAAC;IAED,+BAAU,GAAV,UAAW,GAAG;QACZ,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,kBAAkB,EAAE,EAAC,GAAG,EAAE,GAAG,EAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAC1F,CAAC;IAED,kCAAa,GAAb,UAAc,GAAG,EAAE,IAAI;QACrB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,kBAAkB,EAAE,EAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACtG,CAAC;IAED;;;;OAIG;IACH,gCAAW,GAAX,UAAY,IAAI;QACd,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,mBAAmB,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAC7F,CAAC;IAED;;;;OAIG;IACH,+BAAU,GAAV,UAAW,GAAG;QACZ,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,kBAAkB,EAAE,EAAC,GAAG,EAAE,GAAG,EAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAC1F,CAAC;IAED;;;OAGG;IACH,mCAAc,GAAd,UAAe,QAAa;QAAb,wCAAa;QAC1B,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,sBAAsB,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACxG,CAAC;IAED,qCAAgB,GAAhB,UAAiB,OAAO;QACtB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,iBAAiB,EAAE,OAAO,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACtF,CAAC;IAED,gCAAW,GAAX,UAAY,QAAQ;QAClB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,wBAAwB,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC1G,CAAC;IAED;;;OAGG;IACH,iCAAY,GAAZ,UAAa,QAAQ;QACnB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,0BAA0B,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAC,EAAE,EAAC,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,gEAAW,EAAE,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,EAAC,CAAC,CAAC;IACvL,CAAC;IAED,mCAAc,GAAd,UAAe,SAAS;QACtB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,sBAAsB,EAAE,EAAC,SAAS,EAAE,SAAS,EAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAC1G,CAAC;IAED;;;;OAIG;IACH,iCAAY,GAAZ,UAAa,EAAE;QACb,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,oBAAoB,EAAE,EAAC,EAAE,EAAE,EAAE,EAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAC1F,CAAC;IA1JU,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAUgB,+DAAU;OATf,UAAU,CA2JtB;IAAD,iBAAC;CAAA;AA3JsB;;;;;;;;;;;;;;;;;;;ACPoB;AACM;AAKjD;IAEE,sBACU,SAA0B;QAA1B,cAAS,GAAT,SAAS,CAAiB;IAChC,CAAC;IAEL;;;;OAIG;IACG,gCAAS,GAAf,UAAgB,OAAe;;;;;4BACf,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BACxC,OAAO,EAAE,OAAO;4BAChB,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;KACjB;IAjBU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAIqB,8DAAe;OAHzB,YAAY,CAkBxB;IAAD,mBAAC;CAAA;AAlBwB","file":"user-request-list-request-list-module.js","sourcesContent":["export const CATEGORIES = [\n    \"Cardiology\",\n    \"Endocrinology\",\n    \"Infectious Diseases\",\n    \"Nephrology\",\n    \"Oncology & Hematology\",\n    \"Pediatrics\",\n    \"Psychiatry\",\n    \"Radiology\",\n    \"Dermatology\",\n    \"Gastroenterology\",\n    \"Internal Medicine\",\n    \"Neurology\",\n    \"Precision Oncology\",\n    \"Physical Med/Rehab\",\n    \"Pulmonary Medicine and Critical Care\",\n    \"Rheumatology\"\n];\n\n/**\n * Payment option List\n */\nexport const PAYMENTOPTIONS = [\n    \"Debit Card\",\n    \"Credit Card\",\n    \"Paypal\",\n    \"Paytm\",\n    \"Internet Banking\"\n];\n\n/**\n * Contact info for Veridoc\n */\nexport const CONTACTINFO = {\n    email: \"test@testemail.com\",\n    number: \"+123456789\"\n};\n\n/**\n * backend server url\n */\nexport const BACKENDURL = 'http://192.168.0.104:4200/api/v1';\n\n/**\n * uploaded file path on backend server\n */\nexport const SERVERASSETS = 'http://192.168.0.104:4200/attachments/';\n\n/**\n * Request status\n */\nexport const STATUS = [\n    \"Pending\",\n    \"In Progress\",\n    \"Closed\"\n];\n\n/**\n * Terms and conditions text\n */\nexport const TERMSANDCONDITIONSTXT = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\";\n\n/**\n * 0: open\n * 1: in progress\n * 2: aborted\n * 3: closed\n * 4: withdrawn\n */","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RequestListPage } from './request-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RequestListPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RequestListPage]\n})\nexport class RequestListPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"onClickNavBack()\\\">\\n        <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>My Requests</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <div id=\\\"request-list-newrequest\\\">\\n    <ion-button (click)=\\\"onClickNewRequest()\\\">Get Experts Review</ion-button>\\n  </div>\\n\\n  <ion-list no-padding>\\n    <div *ngFor=\\\"let request of arrMyRequests; let i = index;\\\" class=\\\"request-item\\\">\\n      <div class=\\\"request-item-header\\\">\\n        <div>\\n          <p>\\n            {{arrStatus[request.status]}}\\n          </p>\\n        </div>\\n        <div>\\n          <ion-buttons>\\n            <ion-button fill=\\\"clear\\\" color=\\\"white\\\" *ngIf=\\\"request.status==1 || request.status==0\\\">\\n              <ion-icon name=\\\"create\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" color=\\\"white\\\" (click)=\\\"onClickCloseRequest(i)\\\">\\n              <ion-icon name=\\\"trash\\\"></ion-icon>\\n            </ion-button>\\n          </ion-buttons>\\n        </div>\\n      </div>\\n      <div class=\\\"request-item-inner\\\">\\n        <div>\\n          <p class=\\\"request-item-subheader\\\">\\n            Query\\n          </p>\\n          <p class=\\\"request-item-txtcontent\\\">\\n            {{request.queries}}\\n          </p>\\n        </div>\\n        <div>\\n          <p class=\\\"request-item-subheader\\\">\\n            Comment\\n          </p>\\n          <p class=\\\"request-item-txtcontent\\\">\\n            {{request.comments}}\\n          </p>\\n        </div>\\n        <div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </ion-list>\\n</ion-content>\\n<ion-footer>\\n  <ion-toolbar (click)=\\\"onClickMyDocuments()\\\">\\n    <ion-title>My Documents</ion-title>\\n  </ion-toolbar>\\n</ion-footer>\\n\"","module.exports = \"ion-footer ion-title {\\n  text-align: center; }\\n\\n#request-list-newrequest {\\n  width: 100%;\\n  padding: 16px 16px 0 16px;\\n  text-align: right; }\\n\\n.request-item {\\n  margin: 16px;\\n  box-shadow: 0 2px 4px #b3b3b3; }\\n\\n.request-item-header {\\n  background-color: #3780ff;\\n  display: flex; }\\n\\n.request-item-header div {\\n    flex: 1; }\\n\\n.request-item-header div p {\\n      margin: 0;\\n      padding: 16px;\\n      color: white; }\\n\\n.request-item-header > div:nth-child(2) {\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end; }\\n\\n.request-item-inner {\\n  padding: 16px; }\\n\\n.request-item-subheader {\\n  color: #656565; }\\n\\n.request-item-txtcontent {\\n  margin-left: 16px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Wb2x1bWVzL0RhdGExL1dvcmtzcGFjZS9pb25pYy92ZXJpZG9jL3NyYy9hcHAvcGFnZXMvdXNlci9yZXF1ZXN0LWxpc3QvcmVxdWVzdC1saXN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLGtCQUFrQixFQUFBOztBQUkxQjtFQUNJLFdBQVc7RUFFWCx5QkFBeUI7RUFDekIsaUJBQWlCLEVBQUE7O0FBR3JCO0VBQ0ksWUFBWTtFQUNaLDZCQUE2QixFQUFBOztBQUdqQztFQUNJLHlCQUF5QjtFQUN6QixhQUFhLEVBQUE7O0FBRmpCO0lBSVEsT0FBTyxFQUFBOztBQUpmO01BTVksU0FBUztNQUNULGFBQWE7TUFDYixZQUFZLEVBQUE7O0FBS3hCO0VBQ0ksYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix5QkFBeUIsRUFBQTs7QUFHN0I7RUFDSSxhQUFhLEVBQUE7O0FBR2pCO0VBQ0ksY0FBYyxFQUFBOztBQUdsQjtFQUNJLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdXNlci9yZXF1ZXN0LWxpc3QvcmVxdWVzdC1saXN0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1mb290ZXIge1xuICAgIGlvbi10aXRsZSB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG59XG5cbiNyZXF1ZXN0LWxpc3QtbmV3cmVxdWVzdCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLy8gbWFyZ2luLXRvcDogMnZoO1xuICAgIHBhZGRpbmc6IDE2cHggMTZweCAwIDE2cHg7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5yZXF1ZXN0LWl0ZW0ge1xuICAgIG1hcmdpbjogMTZweDtcbiAgICBib3gtc2hhZG93OiAwIDJweCA0cHggI2IzYjNiMztcbn1cblxuLnJlcXVlc3QtaXRlbS1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNzgwZmY7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBkaXYge1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICBwIHtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5yZXF1ZXN0LWl0ZW0taGVhZGVyID4gZGl2Om50aC1jaGlsZCgyKSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5cbi5yZXF1ZXN0LWl0ZW0taW5uZXIge1xuICAgIHBhZGRpbmc6IDE2cHg7XG59XG5cbi5yZXF1ZXN0LWl0ZW0tc3ViaGVhZGVyIHtcbiAgICBjb2xvcjogIzY1NjU2NTtcbn1cblxuLnJlcXVlc3QtaXRlbS10eHRjb250ZW50IHtcbiAgICBtYXJnaW4tbGVmdDogMTZweDtcbn1cblxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api/api.service';\nimport { LoadingController, AlertController, NavController } from '@ionic/angular';\nimport { STATUS } from '../../constants';\nimport { ToastService } from 'src/app/services/toast/toast.service';\n\n@Component({\n  selector: 'app-request-list',\n  templateUrl: './request-list.page.html',\n  styleUrls: ['./request-list.page.scss'],\n})\nexport class RequestListPage implements OnInit {\n\n  private arrMyRequests = [];\n  private arrStatus = STATUS;\n\n  constructor(\n    private apiService: ApiService,\n    private loadingCtrl: LoadingController,\n    private altCtrl: AlertController,\n    private toastService: ToastService,\n    private navCtrl: NavController\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.initPage();\n  }\n\n  /**\n   * Init Variables\n   */\n  initPage() {\n    this.getRequests();\n  }\n\n  /**\n   * Get My Requests\n   * @returns array of request\n   */\n  async getRequests() {\n    const uid = localStorage.getItem(\"uid\");\n    const dataLoader = await this.loadingCtrl.create({\n      message: \"Loading...\"\n    });\n    await dataLoader.present();\n    this.apiService.getRequest(uid)\n      .subscribe((res: any) => {\n        this.arrMyRequests = [];\n        if(res.data) {\n          for(let i = 0; i < res.data.length; i++) {\n            if(res.data[i].status !== 2) {\n              this.arrMyRequests.push(res.data[i]);\n            }\n          }\n        }\n        dataLoader.dismiss();\n        console.log(\"Result\", this.arrMyRequests);\n      }, error => {\n        console.log(error);\n        dataLoader.dismiss();\n      });\n  }\n\n  /**\n   * navigate to new request page\n   */\n  onClickNewRequest() {\n    this.navCtrl.navigateForward('/menu/expertsreview');\n  }\n\n  /**\n   * Ask user whether close the request or not\n   * @param index: index of request array\n   * @returns null\n   */\n  async onClickCloseRequest(index) {\n    const closeAlt = await this.altCtrl.create({\n      header: \"Close Request?\",\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            \n          }\n        }, \n        {\n          text: 'Ok',\n          handler: (data) => {\n            this.closeRequest(this.arrMyRequests[index]._id);\n          }\n        }\n      ]\n    });\n    await closeAlt.present();\n  }\n\n  /**\n   * Delete Request\n   * @param requestId \n   * @returns null\n   */\n  async closeRequest(requestId) {\n    const closeLoader = await this.loadingCtrl.create({\n      message: \"Please wait...\"\n    });\n    await closeLoader.present();\n    this.apiService.closeRequest(requestId)\n      .subscribe(() => {\n        closeLoader.dismiss();\n        this.toastService.showToast(\"Request is closed!\");\n        this.getRequests();\n      }, error => {\n        console.log(error);\n        closeLoader.dismiss();\n        this.toastService.showToast(\"Close request is failed!\");\n      })\n  }\n\n  /**\n   * View All uploaded doc by user\n   */\n  onClickMyDocuments() {\n    this.navCtrl.navigateForward('/mydocuments');\n  }\n\n  /**\n   * Back to landing page\n   */\n  onClickNavBack() {\n    this.navCtrl.navigateBack('/menu/landing');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BACKENDURL } from 'src/app/pages/constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  /**\n   * API url from constants\n   * @see src/app/pages/constants\n   */\n  private apiUrl = BACKENDURL;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * \n   * @param req \n   * @returns observable\n   */\n  signUp(req) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/register\", req, {headers: headers});\n  }\n\n  /**\n   * \n   * @param credential(email: String, password: String)\n   * @returns observable\n   */\n  login(credential) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/login\", credential, {headers: headers});\n  }\n\n  /**\n   * Reset Password\n   * @param email: String\n   * @returns observable\n   */\n  resetPassword(email) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/restPassword\", {email: email}, {headers: headers});\n  }\n\n  /**\n   * Get Profile Info\n   * @param uid\n   * @returns observable\n   */\n  getUser(uid) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/getUser\", {uid: uid}, {headers: headers});\n  }\n\n  /**\n   * Update User Profile\n   * @param user: Object\n   * @returns observable\n   */\n  updateUser(user) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/updateUser\", {user: user}, {headers: headers});\n  }\n\n  getAllUsers() {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/getAllUser\", {headers: headers});\n  }\n\n  acceptUser(uid) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/acceptUser\", {uid: uid}, {headers: headers});\n  }\n\n  deleteAccount(uid, role) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/deleteUser\", {uid: uid, role: role}, {headers: headers});\n  }\n\n  /**\n   * Post Request\n   * @param post: Object\n   * @returns observable\n   */\n  postRequest(post) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/postRequest\", {post: post}, {headers: headers});\n  }\n\n  /**\n   * Get My Requests (User side)\n   * @param uid userid\n   * @returns observable\n   */\n  getRequest(uid) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/getRequest\", {uid: uid}, {headers: headers});\n  }\n\n  /**\n   * Get All requests by expertid\n   * @param expertId expert id\n   */\n  getAllRequests(expertId = \"\") {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/getAllRequests\", {expertId: expertId}, {headers: headers});\n  }\n\n  requestSetExpert(reqdata) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/setExpert\", reqdata, {headers: headers});\n  }\n\n  uploadFiles(formData) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"enctype\", \"multipart/form-data\");\n    return this.http.post(this.apiUrl + \"/post/uploadAttachment\", formData, {headers: headers}).toPromise();\n  }\n\n  /**\n   * Download File from server\n   * @param filename filename to download\n   */\n  downloadFile(filename) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/downloadAttachment\", {filename: filename}, {responseType: 'blob', headers: new HttpHeaders().append('Content-Type', 'application/json')});\n  }\n\n  processPayment(requestId) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/processPayment\", {requestId: requestId}, {headers: headers});\n  }\n\n  /**\n   * Close Request\n   * @param id request id\n   * @returns observable\n   */\n  closeRequest(id)   {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/closeRequest\", {id: id}, {headers: headers});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(\n    private toastCtrl: ToastController\n  ) { }\n\n  /**\n   * \n   * @param message String\n   * @returns null\n   */\n  async showToast(message: string) {\n    const toast = await this.toastCtrl.create({\n      message: message,\n      duration: 3000\n    });\n    toast.present();\n  }\n}\n"],"sourceRoot":""}