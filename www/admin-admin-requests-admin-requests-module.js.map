{"version":3,"sources":["webpack:///./src/app/pages/admin/admin-requests/admin-requests.module.ts","webpack:///./src/app/pages/admin/admin-requests/admin-requests.page.html","webpack:///./src/app/pages/admin/admin-requests/admin-requests.page.scss","webpack:///./src/app/pages/admin/admin-requests/admin-requests.page.ts","webpack:///./src/app/pages/constants.ts","webpack:///./src/app/services/api/api.service.ts"],"names":[],"mappings":"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","file":"admin-admin-requests-admin-requests-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminRequestsPage } from './admin-requests.page';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminRequestsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PipesModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminRequestsPage]\n})\nexport class AdminRequestsPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-button fill=\\\"clear\\\" (click)=\\\"onClickNavBack()\\\">\\n          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n      <ion-title>All Requests</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content>\\n    <div id=\\\"admin-requests-list\\\">\\n      <div *ngFor=\\\"let request of arrRequests; let i = index;\\\" class=\\\"admin-requests-item\\\">\\n        <div class=\\\"admin-request-item-header\\\">\\n          <p>\\n            {{request._id}}\\n          </p>\\n        </div>\\n        <div class=\\\"admin-request-item-content\\\">\\n          <p>\\n            Status: {{arrStatus[request.status]}}\\n          </p>\\n          <p>\\n            Comments: {{request.comments}}\\n          </p>\\n          <p>\\n            Queries: {{request.queries}}\\n          </p>\\n          <p>\\n            Requestor: \\n          </p>\\n          <ion-item lines=\\\"none\\\" (click)=\\\"onToggleViewAttachment(i)\\\">\\n            <ion-icon *ngIf=\\\"!request.expanded\\\" name=\\\"arrow-dropright\\\"></ion-icon>\\n            <ion-icon *ngIf=\\\"request.expanded\\\" name=\\\"arrow-dropdown\\\"></ion-icon>\\n            <ion-label>View Attachments</ion-label>\\n          </ion-item>\\n          <ion-list *ngIf=\\\"request.expanded\\\" no-padding>\\n            <div *ngFor=\\\"let file of request.files\\\">\\n              <p (click)=\\\"onClickAttachments(file.filename)\\\">\\n                {{file.filename}}\\n              </p>\\n            </div>\\n          </ion-list>\\n          <div class=\\\"admin-requests-controllers-container\\\">\\n            <p (click)=\\\"onClickSentToRequestor(request)\\\">\\n              Send To Requestor\\n            </p>\\n            <p (click)=\\\"onClickBackToReviewer(request)\\\">\\n              Back To Reviewer\\n            </p>\\n            <p (click)=\\\"onClickAbort(request)\\\">\\n              Abort Request\\n            </p>\\n          </div>\\n        </div>\\n        <div class=\\\"admin-request-item-footer\\\">\\n          <p>\\n            Created At: {{request.createdAt | doctime}}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n  </ion-content>\\n  <ion-footer>\\n    <ion-toolbar (click)=\\\"onClickAllCases()\\\">\\n      <ion-title>All Cases</ion-title>\\n    </ion-toolbar>\\n  </ion-footer>\"","module.exports = \"ion-footer ion-title {\\n  text-align: center; }\\n\\n#admin-requests-list {\\n  margin: 16px; }\\n\\n.admin-requests-item {\\n  box-shadow: 0 2px 4px #b3b3b3;\\n  margin-bottom: 2vh; }\\n\\n.admin-request-item-header {\\n  background-color: #3780ff; }\\n\\n.admin-request-item-header p {\\n    margin: 0;\\n    padding: 16px;\\n    color: white;\\n    text-align: left; }\\n\\n.admin-request-item-content {\\n  margin: 16px; }\\n\\n.admin-request-item-footer {\\n  padding: 0 16px 16px 16px; }\\n\\n.admin-request-item-footer p {\\n    margin: 0;\\n    font-size: .8em;\\n    text-align: right; }\\n\\n.admin-requests-controllers-container {\\n  display: flex; }\\n\\n.admin-requests-controllers-container p {\\n    flex: 1;\\n    text-align: center;\\n    font-size: .8em;\\n    color: #144abe;\\n    text-decoration: underline;\\n    cursor: pointer; }\\n\\nion-list {\\n  margin-left: 32px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Wb2x1bWVzL0RhdGExL1dvcmtzcGFjZS9pb25pYy92ZXJpZG9jL3NyYy9hcHAvcGFnZXMvYWRtaW4vYWRtaW4tcmVxdWVzdHMvYWRtaW4tcmVxdWVzdHMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRVEsa0JBQWtCLEVBQUE7O0FBSTFCO0VBQ0ksWUFBWSxFQUFBOztBQUdoQjtFQUNJLDZCQUE2QjtFQUM3QixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSx5QkFBeUIsRUFBQTs7QUFEN0I7SUFHUSxTQUFTO0lBQ1QsYUFBYTtJQUNiLFlBQVk7SUFDWixnQkFBZ0IsRUFBQTs7QUFJeEI7RUFDSSxZQUFZLEVBQUE7O0FBR2hCO0VBQ0kseUJBQXlCLEVBQUE7O0FBRDdCO0lBR1EsU0FBUztJQUNULGVBQWU7SUFDZixpQkFBaUIsRUFBQTs7QUFJekI7RUFDSSxhQUFhLEVBQUE7O0FBRGpCO0lBR1EsT0FBTztJQUNQLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsY0FBdUI7SUFDdkIsMEJBQTBCO0lBQzFCLGVBQWUsRUFBQTs7QUFJdkI7RUFDSSxpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkbWluL2FkbWluLXJlcXVlc3RzL2FkbWluLXJlcXVlc3RzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1mb290ZXIge1xuICAgIGlvbi10aXRsZSB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG59XG5cbiNhZG1pbi1yZXF1ZXN0cy1saXN0IHtcbiAgICBtYXJnaW46IDE2cHg7XG59XG5cbi5hZG1pbi1yZXF1ZXN0cy1pdGVtIHtcbiAgICBib3gtc2hhZG93OiAwIDJweCA0cHggI2IzYjNiMztcbiAgICBtYXJnaW4tYm90dG9tOiAydmg7XG59XG5cbi5hZG1pbi1yZXF1ZXN0LWl0ZW0taGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzc4MGZmO1xuICAgIHAge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICB9XG59XG5cbi5hZG1pbi1yZXF1ZXN0LWl0ZW0tY29udGVudCB7XG4gICAgbWFyZ2luOiAxNnB4O1xufVxuXG4uYWRtaW4tcmVxdWVzdC1pdGVtLWZvb3RlciB7XG4gICAgcGFkZGluZzogMCAxNnB4IDE2cHggMTZweDtcbiAgICBwIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBmb250LXNpemU6IC44ZW07XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIH1cbn1cblxuLmFkbWluLXJlcXVlc3RzLWNvbnRyb2xsZXJzLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwIHtcbiAgICAgICAgZmxleDogMTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBmb250LXNpemU6IC44ZW07XG4gICAgICAgIGNvbG9yOiByZ2IoMjAsIDc0LCAxOTApO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbn1cblxuaW9uLWxpc3Qge1xuICAgIG1hcmdpbi1sZWZ0OiAzMnB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController, LoadingController, Platform } from '@ionic/angular';\nimport { ApiService } from 'src/app/services/api/api.service';\nimport { saveAs } from 'file-saver';\nimport { FileTransfer, FileTransferObject } from '@ionic-native/file-transfer/ngx';\nimport { File } from '@ionic-native/file/ngx';\nimport { SERVERASSETS, STATUS } from '../../constants';\n\n@Component({\n  selector: 'app-admin-requests',\n  templateUrl: './admin-requests.page.html',\n  styleUrls: ['./admin-requests.page.scss'],\n})\nexport class AdminRequestsPage implements OnInit {\n\n  private arrRequests = [];\n  private arrStatus = STATUS;\n\n  constructor(\n    private navCtrl: NavController,\n    private loadingCtrl: LoadingController,\n    private apiService: ApiService,\n    private platform: Platform,\n    private file: File,\n    private transfer: FileTransfer\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.initPage();\n  }\n\n  async initPage() {\n    const requestLoader = await this.loadingCtrl.create({\n      message: \"Loading...\"\n    });\n    await requestLoader.present();\n\n    this.arrRequests = [];\n    this.apiService.getAllRequests()\n      .subscribe((res: any) => {\n        if(res.data) {\n          for(let i = 0; i < res.data.length; i++) {\n            if(res.data[i].status == 0) {\n              this.arrRequests.push({...res.data[i], expanded: false});\n            }\n          }\n        }\n        requestLoader.dismiss();\n        console.log(this.arrRequests);\n      }, error => {\n        console.log(error);\n        requestLoader.dismiss();\n      })\n  }\n\n  onToggleViewAttachment(i) {\n    this.arrRequests[i].expanded = !this.arrRequests[i].expanded;\n  }\n\n  async onClickAttachments(filename) {\n    let isMobile = this.platform.is(\"mobile\");\n    if(isMobile) {\n      const fileTransfer: FileTransferObject = this.transfer.create();\n      try {\n        await fileTransfer.download(SERVERASSETS + filename, this.file.externalRootDirectory + 'Download/' + filename);\n      } catch(err) {\n        console.log(err);\n      }\n    } else {\n      this.apiService.downloadFile(filename)\n      .subscribe((data) => {\n        console.log(data);\n        saveAs(data, filename);\n      }, error => {\n        console.log(error);\n      })\n    }\n  }\n\n  /**\n   * Assign to expert\n   * @param request Request Object\n   */\n  onClickSentToRequestor(request) {\n    if(request.status == 2) {\n      alert(\"This Request is already closed!\");\n      return;\n    }\n    console.log(request);\n  }\n\n  /**\n   * Request is ignored\n   * @param request Request Object\n   */\n  onClickBackToReviewer(request) {\n    if(request.status == 2) {\n      alert(\"This Request is already closed!\");\n      return;\n    }\n    console.log(request);\n  }\n\n  /**\n   * Abort Request\n   * @param request \n   */\n  onClickAbort(request) {\n    if(request.status == 2) {\n      alert(\"This Request is already closed!\");\n      return;\n    }\n    console.log(request);\n  }\n\n  onClickAllCases() {\n    this.navCtrl.navigateForward('/menu/adminallcases');\n  }\n\n  onClickNavBack() {\n    this.navCtrl.navigateBack('/menu/landing');\n  }\n\n}\n","export const CATEGORIES = [\n    \"Cardiology\",\n    \"Endocrinology\",\n    \"Infectious Diseases\",\n    \"Nephrology\",\n    \"Oncology & Hematology\",\n    \"Pediatrics\",\n    \"Psychiatry\",\n    \"Radiology\",\n    \"Dermatology\",\n    \"Gastroenterology\",\n    \"Internal Medicine\",\n    \"Neurology\",\n    \"Precision Oncology\",\n    \"Physical Med/Rehab\",\n    \"Pulmonary Medicine and Critical Care\",\n    \"Rheumatology\",\n    \"I don't know\"\n];\n\n/**\n * Payment option List\n */\nexport const PAYMENTOPTIONS = [\n    \"Debit Card\",\n    \"Credit Card\",\n    \"Paypal\",\n    \"Paytm\",\n    \"Internet Banking\"\n];\n\n/**\n * Contact info for Veridoc\n */\nexport const CONTACTINFO = {\n    email: \"test@testemail.com\",\n    number: \"+123456789\"\n};\n\n/**\n * backend server url\n */\nexport const BACKENDURL = 'http://192.168.0.108:4200/api/v1';\n\n/**\n * uploaded file path on backend server\n */\nexport const SERVERASSETS = 'http://192.168.0.108:4200/attachments/';\n\n/**\n * Request status\n */\nexport const STATUS = [\n    \"Draft\",\n    \"In Progress\",\n    \"Provide Input\",\n    \"Completed\",\n    \"Closed\"\n    // \"Pending\",\n    // \"In Progress\",\n    // \"Closed\"\n];\n\n/**\n * Terms and conditions text\n */\nexport const TERMSANDCONDITIONSTXT = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\";\n\n/**\n * 0: open\n * 1: in progress\n * 2: aborted\n * 3: closed\n * 4: withdrawn\n */","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BACKENDURL } from 'src/app/pages/constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  /**\n   * API url from constants\n   * @see src/app/pages/constants\n   */\n  private apiUrl = BACKENDURL;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * \n   * @param req \n   * @returns observable\n   */\n  signUp(req) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/register\", req, {headers: headers});\n  }\n\n  /**\n   * \n   * @param credential(email: String, password: String)\n   * @returns observable\n   */\n  login(credential) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/login\", credential, {headers: headers});\n  }\n\n  /**\n   * Reset Password\n   * @param email: String\n   * @returns observable\n   */\n  resetPassword(email) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/restPassword\", {email: email}, {headers: headers});\n  }\n\n  /**\n   * Get Profile Info\n   * @param uid\n   * @returns observable\n   */\n  getUser(uid) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/getUser\", {uid: uid}, {headers: headers});\n  }\n\n  /**\n   * Update User Profile\n   * @param user: Object\n   * @returns observable\n   */\n  updateUser(user) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/updateUser\", {user: user}, {headers: headers});\n  }\n\n  /**\n   * Get users by their role\n   * @param role user role\n   * 0: normal user\n   * 1: expert\n   * 2: admin\n   */\n  getUsers(role=\"\") {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/getUsers\", {role: role}, {headers: headers});\n  }\n\n  acceptUser(uid) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/acceptUser\", {uid: uid}, {headers: headers});\n  }\n\n  deleteAccount(uid, role) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/deleteUser\", {uid: uid, role: role}, {headers: headers});\n  }\n\n  /**\n   * Post Request\n   * @param post: Object\n   * @returns observable\n   */\n  postRequest(post) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/postRequest\", {post: post}, {headers: headers});\n  }\n\n  /**\n   * Get My Requests (User side)\n   * @param uid userid\n   * @returns observable\n   */\n  getRequest(uid) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/getRequest\", {uid: uid}, {headers: headers});\n  }\n\n  /**\n   * Get All requests by expertid\n   * @param expertId expert id\n   */\n  getAllRequests(expertId = \"\") {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/getAllRequests\", {expertId: expertId}, {headers: headers});\n  }\n\n  /**\n   * Assign request to expert\n   * @param reqdata request data\n   */\n  requestSetExpert(reqdata) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/setExpert\", reqdata, {headers: headers});\n  }\n\n  getRequestById(reqId) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/getRequestById\", {reqId: reqId}, {headers: headers});\n  }\n\n  uploadFiles(formData) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"enctype\", \"multipart/form-data\");\n    return this.http.post(this.apiUrl + \"/post/uploadAttachment\", formData, {headers: headers}).toPromise();\n  }\n\n  /**\n   * Download File from server\n   * @param filename filename to download\n   */\n  downloadFile(filename) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/downloadAttachment\", {filename: filename}, {responseType: 'blob', headers: new HttpHeaders().append('Content-Type', 'application/json')});\n  }\n\n  processPayment(requestId) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/processPayment\", {requestId: requestId}, {headers: headers});\n  }\n\n  /**\n   * Close Request\n   * @param id request id\n   * @returns observable\n   */\n  closeRequest(id)   {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/closeRequest\", {id: id}, {headers: headers});\n  }\n\n  /**\n   * Update Request Status\n   * @param id request id\n   * @param status request status\n   */\n  updateRequestStatus(id, status) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/updateStatus\", {id: id, status: status}, {headers: headers});\n  }\n\n  /**\n   * Provide user's feedback to expert\n   * @param feedback User Feedback: Object\n   */\n  provideFeedback(feedback) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/review/provideReview\", {feedback: feedback}, {headers: headers});    \n  }\n\n  /**\n   * Provide expert's review for Request\n   * @param expertComment Expert's Comment: Object\n   */\n  provideExpertComment(expertComment) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/expert/provideExpertComment\", {comment: expertComment}, {headers: headers});        \n  }\n}\n"],"sourceRoot":""}