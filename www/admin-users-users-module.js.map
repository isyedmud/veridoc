{"version":3,"sources":["webpack:///./src/app/pages/admin/users/users.module.ts","webpack:///./src/app/pages/admin/users/users.page.html","webpack:///./src/app/pages/admin/users/users.page.scss","webpack:///./src/app/pages/admin/users/users.page.ts","webpack:///./src/app/pages/constants.ts","webpack:///./src/app/pipes/doctime/doctime.pipe.ts","webpack:///./src/app/pipes/pipes.module.ts","webpack:///./src/app/services/api/api.service.ts","webpack:///./src/app/services/toast/toast.service.ts"],"names":[],"mappings":"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","file":"admin-users-users-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\nimport { UsersPage } from './users.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PipesModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UsersPage]\n})\nexport class UsersPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"onClickNavBack()\\\">\\n        <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>User Management</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list id=\\\"admin-users-list\\\">\\n    <div *ngFor=\\\"let user of arrUsers; let i = index\\\" class=\\\"admin-users-item\\\">\\n      <div class=\\\"admin-users-item-header\\\" (click)=\\\"onClickExpandUserRow(i)\\\">\\n        <p>\\n          {{user.fname + \\\" \\\" + user.lname}}\\n        </p>\\n      </div>\\n      <div class=\\\"admin-users-item-content\\\" *ngIf=\\\"user.expanded\\\">\\n        <p [class]=\\\"user.isverified==true?'admin-users-item-status green-tag': 'admin-users-item-status red-tag'\\\">\\n          {{user.isverified?'Verified': 'Not Verified'}}\\n        </p>\\n        <p class=\\\"admin-users-item-content-field\\\">\\n          Username: {{user.username}}\\n        </p>\\n        <p class=\\\"admin-users-item-content-field\\\">\\n          Birthday: {{user.birthday}}\\n        </p>\\n        <p class=\\\"admin-users-item-content-field\\\">\\n          Email: {{user.email}}\\n        </p>\\n        <p class=\\\"admin-users-item-createdat\\\">\\n          Created At: {{user.createdAt | doctime}}\\n        </p>\\n        <div *ngIf=\\\"!user.isverified\\\" class=\\\"admin-users-item-controller\\\">\\n          <div>\\n            <ion-button color=\\\"success\\\" (click)=\\\"onClickAcceptUser(i)\\\">\\n              Accept\\n            </ion-button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \"#admin-users-list {\\n  padding: 16px; }\\n\\n.admin-users-item {\\n  box-shadow: 0 0 6px #a7a7a7;\\n  margin-bottom: 2vh; }\\n\\n.admin-users-item-header {\\n  background-color: #3780ff;\\n  cursor: pointer; }\\n\\n.admin-users-item-header p {\\n    margin: 0;\\n    padding: 16px;\\n    color: white; }\\n\\n.admin-users-item-content {\\n  position: relative;\\n  padding: 16px; }\\n\\n.admin-users-item-content-field {\\n  color: #585858;\\n  font-size: 1em; }\\n\\n.admin-users-item-status {\\n  position: absolute;\\n  margin: 0;\\n  right: 16px;\\n  top: 32px;\\n  font-size: .8em;\\n  padding: 4px;\\n  border-radius: 4px; }\\n\\n.green-tag {\\n  border: 1px solid #72c63a;\\n  color: #72c63a; }\\n\\n.red-tag {\\n  border: 1px solid #ff0000;\\n  color: #ff0000; }\\n\\n.admin-users-item-controller {\\n  text-align: center;\\n  margin-top: 16px; }\\n\\n.admin-users-item-createdat {\\n  margin: 0;\\n  text-align: right;\\n  color: #797979;\\n  font-size: .8em; }\\n\\nion-icon {\\n  font-size: 1.4em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Wb2x1bWVzL0RhdGExL1dvcmtzcGFjZS9pb25pYy92ZXJpZG9jL3NyYy9hcHAvcGFnZXMvYWRtaW4vdXNlcnMvdXNlcnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBYSxFQUFBOztBQUdqQjtFQUNJLDJCQUEyQjtFQUMzQixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSx5QkFBeUI7RUFDekIsZUFBZSxFQUFBOztBQUZuQjtJQUlRLFNBQVM7SUFDVCxhQUFhO0lBQ2IsWUFBWSxFQUFBOztBQUlwQjtFQUNJLGtCQUFrQjtFQUNsQixhQUFhLEVBQUE7O0FBR2pCO0VBQ0ksY0FBYztFQUNkLGNBQWMsRUFBQTs7QUFHbEI7RUFDSSxrQkFBa0I7RUFDbEIsU0FBUztFQUNULFdBQVc7RUFDWCxTQUFTO0VBQ1QsZUFBZTtFQUNmLFlBQVk7RUFDWixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSx5QkFBeUI7RUFDekIsY0FBYyxFQUFBOztBQUdsQjtFQUNJLHlCQUF5QjtFQUN6QixjQUFjLEVBQUE7O0FBR2xCO0VBQ0ksa0JBQWtCO0VBQ2xCLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLFNBQVM7RUFDVCxpQkFBaUI7RUFDakIsY0FBYztFQUNkLGVBQWUsRUFBQTs7QUFHbkI7RUFDSSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkbWluL3VzZXJzL3VzZXJzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNhZG1pbi11c2Vycy1saXN0IHtcbiAgICBwYWRkaW5nOiAxNnB4O1xufVxuXG4uYWRtaW4tdXNlcnMtaXRlbSB7XG4gICAgYm94LXNoYWRvdzogMCAwIDZweCAjYTdhN2E3O1xuICAgIG1hcmdpbi1ib3R0b206IDJ2aDtcbn1cblxuLmFkbWluLXVzZXJzLWl0ZW0taGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzc4MGZmO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBwIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAxNnB4O1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxufVxuXG4uYWRtaW4tdXNlcnMtaXRlbS1jb250ZW50IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogMTZweDtcbn1cblxuLmFkbWluLXVzZXJzLWl0ZW0tY29udGVudC1maWVsZCB7XG4gICAgY29sb3I6ICM1ODU4NTg7XG4gICAgZm9udC1zaXplOiAxZW07XG59XG5cbi5hZG1pbi11c2Vycy1pdGVtLXN0YXR1cyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIG1hcmdpbjogMDtcbiAgICByaWdodDogMTZweDtcbiAgICB0b3A6IDMycHg7XG4gICAgZm9udC1zaXplOiAuOGVtO1xuICAgIHBhZGRpbmc6IDRweDtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG5cbi5ncmVlbi10YWcge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM3MmM2M2E7XG4gICAgY29sb3I6ICM3MmM2M2E7XG59XG5cbi5yZWQtdGFnIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZmYwMDAwO1xuICAgIGNvbG9yOiAjZmYwMDAwO1xufVxuXG4uYWRtaW4tdXNlcnMtaXRlbS1jb250cm9sbGVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMTZweDtcbn1cblxuLmFkbWluLXVzZXJzLWl0ZW0tY3JlYXRlZGF0IHtcbiAgICBtYXJnaW46IDA7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgY29sb3I6ICM3OTc5Nzk7XG4gICAgZm9udC1zaXplOiAuOGVtO1xufVxuXG5pb24taWNvbiB7XG4gICAgZm9udC1zaXplOiAxLjRlbTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController, LoadingController } from '@ionic/angular';\nimport { ApiService } from 'src/app/services/api/api.service';\nimport { ToastService } from 'src/app/services/toast/toast.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.page.html',\n  styleUrls: ['./users.page.scss'],\n})\nexport class UsersPage implements OnInit {\n\n  private arrUsers = [];\n\n  constructor(\n    private navCtrl: NavController,\n    private loadingCtrl: LoadingController,\n    private apiService: ApiService,\n    private toastService: ToastService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.initPage();\n  }\n\n  /**\n   * Init Page\n   * Get All Experts\n   */\n  async initPage() {\n    this.arrUsers = [];\n    const userLoader = await this.loadingCtrl.create({\n      message: \"Loading...\"\n    });\n    await userLoader.present();\n    this.apiService.getAllUsers()\n      .subscribe((res: any) => {\n        if(res.data) {\n          for(let i = 0; i < res.data.length; i++) {\n            if(res.data[i].role == 1) {\n              this.arrUsers.push({...res.data[i], expanded: false});\n            }\n          }\n        }\n        userLoader.dismiss();\n      }, error => {\n        console.log(error);\n        userLoader.dismiss();\n      })\n  }\n\n  /**\n   * Expand user info cell\n   * @param index arrUsers array index\n   */\n  onClickExpandUserRow(index) {\n    this.arrUsers[index].expanded = !this.arrUsers[index].expanded;\n  }\n\n  /**\n   * Accept user\n   * Update isverified field to true on user table\n   * @param index arrUsers array index\n   */\n  async onClickAcceptUser(index) {\n    const acceptLoader = await this.loadingCtrl.create({\n      message: \"Please wait...\"\n    });\n    await acceptLoader.present();\n\n    this.apiService.acceptUser(this.arrUsers[index]._id)\n      .subscribe((res) => {\n        acceptLoader.dismiss();\n        this.toastService.showToast(\"User is accepted!\");\n        this.arrUsers[index].isverified = true;\n      }, error => {\n        console.log(error);\n        acceptLoader.dismiss();\n      })\n  }\n\n  onClickNavBack() {\n    this.navCtrl.navigateBack('/menu/landing');\n  }\n\n}\n","export const CATEGORIES = [\n    \"Cardiology\",\n    \"Endocrinology\",\n    \"Infectious Diseases\",\n    \"Nephrology\",\n    \"Oncology & Hematology\",\n    \"Pediatrics\",\n    \"Psychiatry\",\n    \"Radiology\",\n    \"Dermatology\",\n    \"Gastroenterology\",\n    \"Internal Medicine\",\n    \"Neurology\",\n    \"Precision Oncology\",\n    \"Physical Med/Rehab\",\n    \"Pulmonary Medicine and Critical Care\",\n    \"Rheumatology\"\n];\n\n/**\n * Payment option List\n */\nexport const PAYMENTOPTIONS = [\n    \"Debit Card\",\n    \"Credit Card\",\n    \"Paypal\",\n    \"Paytm\",\n    \"Internet Banking\"\n];\n\n/**\n * Contact info for Veridoc\n */\nexport const CONTACTINFO = {\n    email: \"test@testemail.com\",\n    number: \"+123456789\"\n};\n\n/**\n * backend server url\n */\nexport const BACKENDURL = 'http://192.168.0.104:4200/api/v1';\n\n/**\n * uploaded file path on backend server\n */\nexport const SERVERASSETS = 'http://192.168.0.104:4200/attachments/';\n\n/**\n * Request status\n */\nexport const STATUS = [\n    \"Pending\",\n    \"In Progress\",\n    \"Closed\"\n];\n\n/**\n * Terms and conditions text\n */\nexport const TERMSANDCONDITIONSTXT = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\";\n\n/**\n * 0: open\n * 1: in progress\n * 2: aborted\n * 3: closed\n * 4: withdrawn\n */","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'doctime'\n})\nexport class DoctimePipe implements PipeTransform {\n\n  transform(value: any): any {\n    let result = \"\";\n    let d = new Date(value);\n    let minVal: any = d.getMinutes();\n    minVal = minVal < 10 ? '0' + minVal : minVal;\n\n    let hourVal = d.getHours();\n    var ampm = hourVal >= 12 ? 'pm' : 'am';\n    hourVal = hourVal % 12;\n    hourVal = hourVal ? hourVal : 12;\n\n    let dayVal = d.getDate();\n    let monVal = d.getMonth() + 1;\n    let yearVal = d.getFullYear();\n\n    result = monVal + \"/\" + dayVal + \"/\" + yearVal+ \" \" + hourVal + \":\" + minVal + \" \" + ampm;\n    return result;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DoctimePipe } from './doctime/doctime.pipe';\n\n@NgModule({\n  declarations: [\n    DoctimePipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DoctimePipe\n  ]\n})\nexport class PipesModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BACKENDURL } from 'src/app/pages/constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  /**\n   * API url from constants\n   * @see src/app/pages/constants\n   */\n  private apiUrl = BACKENDURL;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * \n   * @param req \n   * @returns observable\n   */\n  signUp(req) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/register\", req, {headers: headers});\n  }\n\n  /**\n   * \n   * @param credential(email: String, password: String)\n   * @returns observable\n   */\n  login(credential) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/login\", credential, {headers: headers});\n  }\n\n  /**\n   * Reset Password\n   * @param email: String\n   * @returns observable\n   */\n  resetPassword(email) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/restPassword\", {email: email}, {headers: headers});\n  }\n\n  /**\n   * Get Profile Info\n   * @param uid\n   * @returns observable\n   */\n  getUser(uid) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/getUser\", {uid: uid}, {headers: headers});\n  }\n\n  /**\n   * Update User Profile\n   * @param user: Object\n   * @returns observable\n   */\n  updateUser(user) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/updateUser\", {user: user}, {headers: headers});\n  }\n\n  getAllUsers() {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/getAllUser\", {headers: headers});\n  }\n\n  acceptUser(uid) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/acceptUser\", {uid: uid}, {headers: headers});\n  }\n\n  deleteAccount(uid, role) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/user/deleteUser\", {uid: uid, role: role}, {headers: headers});\n  }\n\n  /**\n   * Post Request\n   * @param post: Object\n   * @returns observable\n   */\n  postRequest(post) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/postRequest\", {post: post}, {headers: headers});\n  }\n\n  /**\n   * Get My Requests (User side)\n   * @param uid userid\n   * @returns observable\n   */\n  getRequest(uid) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/getRequest\", {uid: uid}, {headers: headers});\n  }\n\n  /**\n   * Get All requests by expertid\n   * @param expertId expert id\n   */\n  getAllRequests(expertId = \"\") {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/getAllRequests\", {expertId: expertId}, {headers: headers});\n  }\n\n  requestSetExpert(reqdata) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/setExpert\", reqdata, {headers: headers});\n  }\n\n  uploadFiles(formData) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"enctype\", \"multipart/form-data\");\n    return this.http.post(this.apiUrl + \"/post/uploadAttachment\", formData, {headers: headers}).toPromise();\n  }\n\n  /**\n   * Download File from server\n   * @param filename filename to download\n   */\n  downloadFile(filename) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/downloadAttachment\", {filename: filename}, {responseType: 'blob', headers: new HttpHeaders().append('Content-Type', 'application/json')});\n  }\n\n  processPayment(requestId) {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/processPayment\", {requestId: requestId}, {headers: headers});\n  }\n\n  /**\n   * Close Request\n   * @param id request id\n   * @returns observable\n   */\n  closeRequest(id)   {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"Content-type\", \"application/json\");\n    return this.http.post(this.apiUrl + \"/post/closeRequest\", {id: id}, {headers: headers});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(\n    private toastCtrl: ToastController\n  ) { }\n\n  /**\n   * \n   * @param message String\n   * @returns null\n   */\n  async showToast(message: string) {\n    const toast = await this.toastCtrl.create({\n      message: message,\n      duration: 3000\n    });\n    toast.present();\n  }\n}\n"],"sourceRoot":""}